plugins {
    id 'java-library'
    id 'war'
    id 'org.jetbrains.kotlin.jvm' version "1.4.10"
    id "com.stehno.gradle.dependency-checker" version "0.2.3"
    id "org.gretty" version "3.0.3"
    id 'maven-publish'

}

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    implementation "org.museautomation:muse-core:[0.25,)"
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.32'
    compile 'org.glassfish.jersey.inject:jersey-hk2:2.32'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'

    testCompile  'org.junit.jupiter:junit-jupiter-api:5+'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5+'
}

tasks.check.dependsOn checkDependencies
tasks.build.dependsOn checkDependencies

tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

version = '0.1'
group = 'org.museautomation'

gretty {
  contextPath = '/'
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

wrapper {
    gradleVersion = '6.6'
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        mavenLocal()
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

